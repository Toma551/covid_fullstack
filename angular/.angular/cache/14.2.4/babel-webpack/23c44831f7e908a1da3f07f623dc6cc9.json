{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/thoma/Git_Fullstack/covid_fullstack/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n\nfunction WaitingComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.infos, \"\\n\");\n  }\n}\n\nexport class WaitingComponent {\n  constructor(http) {\n    this.http = http;\n    this.infos = '';\n    this.temps = 0;\n    this.tempsRestant = 0;\n    this.finishedTimer = false;\n  }\n\n  ngOnInit() {\n    this.info();\n  }\n\n  info() {\n    this.http.get('api/infos/429', {\n      observe: 'response'\n    }).subscribe({\n      next: resp => {\n        console.log(resp);\n        console.log(resp.headers.keys());\n        const nbToken = resp.headers.get('X-Rate-Limit-Remaining');\n        this.infos = `${nbToken} tokens restants`;\n      },\n      error: err => {\n        console.error(err);\n        console.log(err.headers.keys());\n        this.temps = err.headers.get('X-Rate-Limit-Retry-After-Seconds');\n        this.infos = `Réessayer après ${this.temps} secondes`;\n\n        if (this.temps > 0) {\n          this.startTimer();\n        }\n      }\n    });\n  }\n\n  startTimer() {\n    var _this = this;\n\n    const tempsInitial = this.temps;\n    this.tempsRestant = this.temps;\n    const timer$ = interval(1000);\n    const sub = timer$.subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (sec) {\n        sec = sec + 1;\n        _this.tempsRestant = tempsInitial - sec;\n        _this.infos = `Réessayer après ${_this.tempsRestant} secondes`;\n\n        if (_this.tempsRestant <= 0) {\n          sub.unsubscribe();\n          yield new Promise(f => setTimeout(f, 1000));\n\n          _this.info();\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n}\n\nWaitingComponent.ɵfac = function WaitingComponent_Factory(t) {\n  return new (t || WaitingComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nWaitingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WaitingComponent,\n  selectors: [[\"app-waiting\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"]],\n  template: function WaitingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, WaitingComponent_div_0_Template, 2, 1, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.infos);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3YWl0aW5nLmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,QAAT,QAAyB,MAAzB;;;;;;ICFAC;IACEA;IACFA;;;;;IADEA;IAAAA;;;;ADQF,OAAM,MAAOC,gBAAP,CAAuB;EAE3BC,YACmBC,IADnB,EACmC;IAAhB;IAGnB,aAAQ,EAAR;IAEA,aAAQ,CAAR;IACA,oBAAe,CAAf;IACA,qBAAgB,KAAhB;EANO;;EAQPC,QAAQ;IACN,KAAKC,IAAL;EACD;;EAEDA,IAAI;IACF,KAAKF,IAAL,CAAUG,GAAV,CAAmB,eAAnB,EAAoC;MAACC,OAAO,EAAE;IAAV,CAApC,EACCC,SADD,CACW;MACTC,IAAI,EAAGC,IAAD,IAAS;QACfC,OAAO,CAACC,GAAR,CAAYF,IAAZ;QACAC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,CAAaC,IAAb,EAAZ;QACA,MAAMC,OAAO,GAAIL,IAAI,CAACG,OAAL,CAAaP,GAAb,CAAiB,wBAAjB,CAAjB;QACA,KAAKU,KAAL,GAAa,GAAGD,OAAO,kBAAvB;MACD,CANU;MAOXE,KAAK,EAAIC,GAAD,IAAQ;QACdP,OAAO,CAACM,KAAR,CAAcC,GAAd;QACAP,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACL,OAAJ,CAAYC,IAAZ,EAAZ;QACA,KAAKK,KAAL,GAAcD,GAAG,CAACL,OAAJ,CAAYP,GAAZ,CAAgB,kCAAhB,CAAd;QACA,KAAKU,KAAL,GAAa,mBAAmB,KAAKG,KAAK,WAA1C;;QACA,IAAI,KAAKA,KAAL,GAAa,CAAjB,EAAoB;UAClB,KAAKC,UAAL;QACD;MACF;IAfU,CADX;EAkBD;;EAEDA,UAAU;IAAA;;IACR,MAAMC,YAAY,GAAG,KAAKF,KAA1B;IACA,KAAKG,YAAL,GAAoB,KAAKH,KAAzB;IACA,MAAMI,MAAM,GAAGxB,QAAQ,CAAC,IAAD,CAAvB;IAEA,MAAMyB,GAAG,GAAGD,MAAM,CAACf,SAAP;MAAA,6BAAiB,WAAOiB,GAAP,EAAc;QACzCA,GAAG,GAAGA,GAAG,GAAC,CAAV;QACA,KAAI,CAACH,YAAL,GAAoBD,YAAY,GAAGI,GAAnC;QACA,KAAI,CAACT,KAAL,GAAa,mBAAmB,KAAI,CAACM,YAAY,WAAjD;;QACA,IAAI,KAAI,CAACA,YAAL,IAAqB,CAAzB,EAA4B;UAC1BE,GAAG,CAACE,WAAJ;UACA,MAAM,IAAIC,OAAJ,CAAYC,CAAC,IAAIC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA3B,CAAN;;UACA,KAAI,CAACvB,IAAL;QACD;MACF,CATW;;MAAA;QAAA;MAAA;IAAA,IAAZ;EAUD;;AApD0B;;;mBAAhBJ,kBAAgBD;AAAA;;;QAAhBC;EAAgB6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT7BlC;;;;MAAMA","names":["interval","i0","WaitingComponent","constructor","http","ngOnInit","info","get","observe","subscribe","next","resp","console","log","headers","keys","nbToken","infos","error","err","temps","startTimer","tempsInitial","tempsRestant","timer$","sub","sec","unsubscribe","Promise","f","setTimeout","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\thoma\\Git_Fullstack\\covid_fullstack\\angular\\src\\app\\waiting\\waiting.component.ts","C:\\Users\\thoma\\Git_Fullstack\\covid_fullstack\\angular\\src\\app\\waiting\\waiting.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-waiting',\n  templateUrl: './waiting.component.html',\n  styleUrls: ['./waiting.component.scss']\n})\nexport class WaitingComponent implements OnInit {\n\n  constructor(\n    private readonly http: HttpClient\n    ) { }\n\n  infos = '';\n  private sub: any;\n  temps = 0;\n  tempsRestant = 0;\n  finishedTimer = false;\n\n  ngOnInit(): void {\n    this.info()\n  }\n\n  info() {\n    this.http.get<any>('api/infos/429', {observe: 'response'})\n    .subscribe({\n      next: (resp) => {\n      console.log(resp);\n      console.log(resp.headers.keys());\n      const nbToken =  resp.headers.get('X-Rate-Limit-Remaining')\n      this.infos = `${nbToken} tokens restants`\n    },\n    error:  (err) => {\n      console.error(err);\n      console.log(err.headers.keys());\n      this.temps =  err.headers.get('X-Rate-Limit-Retry-After-Seconds')\n      this.infos = `Réessayer après ${this.temps} secondes`;\n      if (this.temps > 0) {\n        this.startTimer();\n      }\n    }\n    });\n  }\n\n  startTimer() {\n    const tempsInitial = this.temps;\n    this.tempsRestant = this.temps;\n    const timer$ = interval(1000);\n\n    const sub = timer$.subscribe(async (sec) => {\n      sec = sec+1;\n      this.tempsRestant = tempsInitial - sec;\n      this.infos = `Réessayer après ${this.tempsRestant} secondes`;\n      if (this.tempsRestant <= 0) {\n        sub.unsubscribe();\n        await new Promise(f => setTimeout(f, 1000));\n        this.info();\n      }\n    });\n  }\n\n}\n","<div *ngIf=\"infos\">\n  {{infos}}\n</div>\n"]},"metadata":{},"sourceType":"module"}